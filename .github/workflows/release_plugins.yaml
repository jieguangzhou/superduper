name: Release in Pypi/DockerHub
on:
  push:
    branches:
      - test_release

jobs:
  plugin_update_check:
    if: ${{ startsWith(github.event.head_commit.message, '[PLUGINS] Bump Version') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get changed files for plugins
        id: changed-files-specific
        uses: tj-actions/changed-files@v44

      - name: Filter changed plugins and set output
        id: set-matrix
        run: |
          IFS=$'\n'
          changed_files=(${{ steps.changed-files-specific.outputs.all_changed_files }})
          declare -A plugin_set
          for file in "${changed_files[@]}"; do
            echo $file
            if [[ "$file" =~ ^plugins/dummy/ && ! "$file" =~ ^plugins/template/ ]]; then
              echo "$file"
              plugin_name=$(echo "$file" | cut -d '/' -f 2)
              plugin_set[$plugin_name]=1
            fi
          done
          plugins=("${!plugin_set[@]}")
          matrix_json=$(printf '%s\n' "${plugins[@]}" | jq -R -s -c '{plugin: split("\n")[:-1]}')
          echo "matrix_json=$matrix_json"
          echo "Changed plugins: ${plugins[*]}"
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
          echo "matrix_json: $matrix_json"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  release_plugin:
    needs: plugin_update_check
    runs-on: ubuntu-latest
    environment: publish-pypi
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.plugin_update_check.outputs.matrix)}}
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
 
      - name: Install dependencies
        run: python -m pip install --upgrade build

      - name: Build
        run: python -m build plugins/${{ matrix.plugin }}


      - name: Test package
        run: |
          python -m pip install plugins/${{ matrix.plugin }}/dist/*.whl
          python -c "python -c "import superduper_${{ matrix.plugin }} as p; print(p.__version__)"

      # - uses: actions/download-artifact@v3
      # # Try uploading to Test PyPI first, in case something fails.
      # - uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository-url: https://test.pypi.org/legacy/
      #     packages-dir: plugins/${{ matrix.plugin }}/dist/

      # - uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     packages-dir: plugins/${{ matrix.plugin }}/dist/
